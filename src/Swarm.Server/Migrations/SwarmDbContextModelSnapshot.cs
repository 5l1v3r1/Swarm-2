// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Swarm;

namespace Swarm.Server.Migrations
{
    [DbContext(typeof(SwarmDbContext))]
    partial class SwarmDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Swarm.Basic.Entity.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConnectionId")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("CoreCount");

                    b.Property<DateTimeOffset>("CreationTime");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("IsConnected");

                    b.Property<DateTimeOffset?>("LastModificationTime");

                    b.Property<int>("Memory");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<string>("Os")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("SchedInstanceId")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<string>("SchedName")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("ConnectionId")
                        .IsUnique();

                    b.HasIndex("CreationTime");

                    b.HasIndex("Name", "Group")
                        .IsUnique();

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Swarm.Basic.Entity.ClientProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("App")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<string>("AppArguments")
                        .IsRequired();

                    b.Property<DateTimeOffset>("CreationTime");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<string>("JobId")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<DateTimeOffset?>("LastModificationTime");

                    b.Property<string>("Msg")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<int>("ProcessId");

                    b.Property<int>("Sharding");

                    b.Property<int>("State")
                        .HasMaxLength(32);

                    b.Property<string>("TraceId")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.HasIndex("Name", "Group");

                    b.ToTable("ClientProcess");
                });

            modelBuilder.Entity("Swarm.Basic.Entity.Job", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("AllowConcurrent");

                    b.Property<DateTimeOffset>("CreationTime");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<int>("Executor");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<DateTimeOffset?>("LastModificationTime");

                    b.Property<int>("Load");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<string>("Owner")
                        .HasMaxLength(120);

                    b.Property<int>("Performer");

                    b.Property<string>("SchedInstanceId")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<string>("SchedName")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<int>("Sharding");

                    b.Property<string>("ShardingParameters")
                        .HasMaxLength(500);

                    b.Property<int>("Trigger");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.HasIndex("Group");

                    b.HasIndex("Name");

                    b.HasIndex("Owner");

                    b.HasIndex("Name", "Group");

                    b.ToTable("Job");
                });

            modelBuilder.Entity("Swarm.Basic.Entity.JobProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreationTime");

                    b.Property<string>("JobId")
                        .HasMaxLength(32);

                    b.Property<string>("Name")
                        .HasMaxLength(32);

                    b.Property<string>("Value")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.HasIndex("JobId", "Name")
                        .IsUnique()
                        .HasFilter("[JobId] IS NOT NULL AND [Name] IS NOT NULL");

                    b.ToTable("JobProperty");
                });

            modelBuilder.Entity("Swarm.Basic.Entity.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientGroup")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<DateTimeOffset>("CreationTime");

                    b.Property<string>("JobId")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<string>("Msg");

                    b.Property<int>("Sharding");

                    b.Property<string>("TraceId")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.HasIndex("JobId");

                    b.HasIndex("JobId", "TraceId");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("Swarm.Basic.Entity.Node", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConnectionString")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("CreationTime");

                    b.Property<bool>("IsConnected");

                    b.Property<DateTimeOffset?>("LastModificationTime");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("SchedInstanceId")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<string>("SchedName")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<long>("TriggerTimes");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.HasIndex("SchedInstanceId")
                        .IsUnique();

                    b.HasIndex("SchedName");

                    b.HasIndex("SchedName", "SchedInstanceId")
                        .IsUnique();

                    b.ToTable("Node");
                });
#pragma warning restore 612, 618
        }
    }
}
